// Prisma schema for Scavenger Hunt Map App
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Admin user model for authentication
model Admin {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String   // bcrypt hashed
  role      String   @default("editor") // admin or editor
  createdAt DateTime @default(now())
}

// Hotspot model for scavenger hunt locations
model Hotspot {
  id            String    @id @default(uuid())
  title         String
  description   String
  lat           Float
  lng           Float
  prize         Float?    // Prize amount in SOL
  startDate     DateTime
  endDate       DateTime
  active        Boolean   @default(true)
  imageUrl      String?
  privateKey    String?   // Encrypted Solana private key
  claimStatus   String    @default("unclaimed") // unclaimed, pending, claimed
  claimedBy     String?   // User identifier (IP or temp ID)
  claimedAt     DateTime?
  tweetUrl      String?   // Twitter proof URL
  queuePosition Int       @default(0) // 0 = active, 1+ = queued
  locationName  String?   // Cached geocoded location name
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// Admin action log for audit trail
model AdminLog {
  id        String   @id @default(uuid())
  adminId   String
  action    String   // CREATE, UPDATE, DELETE
  entity    String   // Hotspot
  entityId  String
  details   String?  // Optional details about the action
  timestamp DateTime @default(now())
}
